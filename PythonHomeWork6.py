

"""
Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться в его кричалках 
не настолько просто, насколько легко он их придумывает, Вам стоит написать программу. Винни-Пух считает, 
что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. 
Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами. 
Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает в программу с клавиатуры. 
В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке
Ввод:
пара-ра-рам рам-пам-папам па-ра-па-да
Вывод:
Парам пам-пам
"""

print('\nРешение задачи 1:')

text1 = input('Введите кричалку Винни-Пуха: ').split()


def counts(text):
    count = 0
    dictionary = {'а', 'и', 'е', 'ё', 'о', 'у', 'ы', 'э', 'ю', 'я',
                  'А', 'И', 'Е', 'Ё', 'О', 'У', 'Ы', 'Э', 'Ю', 'Я'}
    for i in text:
        if i in dictionary:
            count += 1
    return count


flag = True

for i in range(len(text1)-1):
    if counts(text1[i]) != counts(text1[i+1]):
        flag = False
        print('Пам парам')
        break

if flag == True:
    print('Парам пам-пам')


"""
Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6), которая принимает 
в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца. Аргументы num_rows 
и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны. 
Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля). Примечание: бинарной 
операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.
Ввод:
print_operation_table(lambda x, y: x * y)
Вывод:
1 2 3 4 5 6
2 4 6 8 10 12
3 6 9 12 15 18
4 8 12 16 20 24
5 10 15 20 25 30
6 12 18 24 30 36
"""

print('\nРешение задачи 2:')


def print_operation_table(operation, num_rows=6, num_columns=6):
    for i in range(1, num_rows + 1):
        for j in range(1, num_columns + 1):
            print(operation(i, j), end='\t')
        print()


print_operation_table(lambda x, y: x * y)


"""
Напишите функцию same_by(characteristic, objects), которая проверяет, все ли объекты
имеют одинаковое значение некоторой характеристики, и возвращают True, если это так.
Если значение характеристики для разных объектов отличается - то False. Для пустого
набора объектов, функция должна возвращать True. Аргумент characteristic - это функция,
которая принимает объект и вычисляет его характеристику.
Пример:
same_by(lambda x: x % 2, [2,4,6,8])
Ответ: True
"""

print('\nРешение задачи 3:')


def same_by(characteristic, objects):
    print(list(filter(characteristic, objects)) == []
          or list(filter(characteristic, objects)) == objects)


same_by(lambda x: x % 2, [2, 4, 6, 8])
